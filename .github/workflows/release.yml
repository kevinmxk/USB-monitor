name: Release

# 仅在推送标签时触发
on:
  push:
    tags:
      - 'v*.*.*'

env:
  ELECTRON_CACHE: ~/.cache/electron
  ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: USB Viewer ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## 更新内容
          
          ### 新功能
          - 请在此处描述新功能
          
          ### 修复问题
          - 请在此处描述修复的问题
          
          ### 下载说明
          - Windows 用户：下载 `USBViewer-Setup-*.exe` 或 `USBViewer-Portable-*.exe`
          - Linux 用户：下载 `*.AppImage`、`*.deb` 或 `*.rpm` 文件
          - macOS 用户：下载 `*.dmg` 文件

  # Windows 构建和上传
  build-and-upload-windows:
    name: Build and Upload Windows
    needs: release
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm run postinstall
        
    - name: Build Windows application
      run: npm run dist:win
      
    - name: Get package version
      id: package-version
      shell: bash
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Upload Windows Setup
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/USBViewer-Setup-${{ steps.package-version.outputs.version }}-x64.exe
        asset_name: USBViewer-Setup-${{ steps.package-version.outputs.version }}-x64.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Windows Portable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/USBViewer-Portable-${{ steps.package-version.outputs.version }}-x64.exe
        asset_name: USBViewer-Portable-${{ steps.package-version.outputs.version }}-x64.exe
        asset_content_type: application/octet-stream

  # Linux 构建和上传
  build-and-upload-linux:
    name: Build and Upload Linux
    needs: release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libdrm2 \
          libgtk-3-dev \
          libgbm-dev \
          rpm \
          fakeroot \
          dpkg-dev
          
    - name: Install dependencies
      run: |
        npm ci
        npm run postinstall
        
    - name: Build Linux application
      run: npm run dist:linux
      
    - name: Get package version
      id: package-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Upload AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/USB Viewer-${{ steps.package-version.outputs.version }}.AppImage
        asset_name: USB-Viewer-${{ steps.package-version.outputs.version }}.AppImage
        asset_content_type: application/octet-stream
        
    - name: Upload DEB package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/usbviewer_${{ steps.package-version.outputs.version }}_amd64.deb
        asset_name: usbviewer_${{ steps.package-version.outputs.version }}_amd64.deb
        asset_content_type: application/octet-stream
