name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  ELECTRON_CACHE: ~/.cache/electron
  ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder

jobs:
  # Windows 构建任务
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          npm run postinstall
      - name: Download backend jar
        run: |
          mkdir resources
          curl -L "https://github.com/kevinmxk/USB-monitor/releases/download/v1.1.0/USBmonitor-4.jar" -o resources/USBmonitor-4.jar
      - name: Build Windows application
        run: npm run dist:win
      - name: List dist files
        run: dir dist
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-${{ github.sha }}
          path: |
            dist/*.exe
            dist/*.zip
          retention-days: 7

  # Linux 构建任务
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Set npm registry
        run: npm config set registry https://registry.npmmirror.com
      - name: Clean all electron-builder cache
        run: rm -rf ~/.cache/electron-builder || true
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libnss3-dev \
            libatk-bridge2.0-dev \
            libdrm2 \
            libgtk-3-dev \
            libgbm-dev \
            rpm \
            fakeroot \
            dpkg-dev \
            ruby
      - name: Install dependencies
        run: |
          npm ci
          npm run postinstall
      - name: Download backend jar
        run: |
          mkdir -p resources
          curl -L "https://github.com/kevinmxk/USB-monitor/releases/download/v1.1.0/USBmonitor-4.jar" -o resources/USBmonitor-4.jar
      - name: Build Linux application (with retry)
        run: |
          for i in 1 2 3; do
            npm run dist:linux && break || sleep 10
          done
      - name: List dist files
        run: ls dist
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-${{ github.sha }}
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
          retention-days: 7
